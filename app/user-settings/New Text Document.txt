"use client";

import { useEffect, useState } from "react";
import { useAuth } from "../../contexts/AuthContext";
import { supabase } from "../../lib/supabase";
import { useRouter } from "next/navigation";

export default function UserDashboard() {
  const { player, loading } = useAuth();
  const router = useRouter();
  const [sessions, setSessions] = useState([]);
  const [avatarUrl, setAvatarUrl] = useState('');

  // Ensure user is logged in
  useEffect(() => {
    if (!loading && !player) {
      router.replace("/login");
    }
  }, [loading, player, router]);

  // Fetch user session data from Supabase
  useEffect(() => {
    const fetchSessions = async () => {
      if (!player?.id) return;

      const { data: sessionData, error } = await supabase
        .from("workout_sessions")
        .select("*")
        .eq("player_id", player.id);

      if (error) {
        console.error("Failed to fetch sessions", error);
        return;
      }

      setSessions(sessionData || []);
    };

    fetchSessions();
  }, [player]);

  return (
    <div className="max-w-6xl mx-auto p-6">
      {/* User Profile Section */}
      <div className="bg-gray-900 p-6 rounded-lg shadow mb-8 flex items-center gap-4">
        <div>
          <img
            src={player?.avatar_url || "/default-avatar.png"}
            alt={player?.name}
            className="w-20 h-20 rounded-full object-cover border-2 border-cyan-500"
          />
        </div>
        <div>
          <h2 className="text-xl font-bold text-cyan-400">{player?.name}</h2>
          <p className="text-sm text-gray-400">{player?.team}</p>
          <button
            onClick={() => router.push("/profile/edit")}
            className="bg-cyan-600 hover:bg-cyan-700 text-white font-semibold px-4 py-2 rounded mt-2"
          >
            Edit Profile
          </button>
        </div>
      </div>

      {/* Session List Section */}
      <h3 className="text-2xl font-bold mb-4">Your Sessions</h3>
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {sessions.length === 0 ? (
          <p>No sessions found. Start a new workout!</p>
        ) : (
          sessions.map((session) => (
            <div key={session.id} className="bg-gray-900 p-6 rounded-lg shadow">
              <h4 className="text-lg font-semibold mb-2">Session: {session.name}</h4>
              <p className="text-sm text-gray-400">XP Earned: {session.xr_awarded}</p>
              <p className="text-sm text-gray-400">Completed on: {new Date(session.completed_at).toLocaleDateString()}</p>
            </div>
          ))
        )}
      </div>

      {/* Button to Create New Session */}
      <div className="flex justify-end mt-8">
        <button
          onClick={() => router.push("/create-session")}
          className="bg-green-600 hover:bg-green-700 text-white font-semibold px-4 py-2 rounded"
        >
          + Create New Session
        </button>
      </div>
    </div>
  );
}
